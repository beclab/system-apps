on:
  workflow_call:
    inputs:
      NODE_VERSION:
        required: true
        type: string
      PACKAGE_NAME:
        required: true
        type: string
      PACKAGE_PATH:
        required: true
        type: string
      DOCKERFILE_PATH:
        required: true
        type: string
      PACKAGE_BUILD_SCRIPT:
        required: true
        type: string
      DEFAULT_VERSION:
        required: true
        type: string
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ inputs.NODE_VERSION }}

      - name: Install fonttools
        run: pip3 install fonttools brotli
      - name: Download fonttools Files
        run: |
          pwd
          curl -L -o fonttools.zip https://cdn.bttcdn.com/common/fonttools.zip
          unzip fonttools.zip
      - name: Python Icon
        run: pwd; cd ./fonttools; sudo node python-icon.js
      - name: subset Icon
        run: |
          sudo chmod 755 fonttools
          cd ./fonttools
          ./subset_font.sh nyTnjDwKNJ_190FjzaqkNCeE.woff2 unicodes.txt MaterialSymbolsRounded.woff2 ../src/assets/fonts

      - name: Cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/packagge-lock.json')}}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install
        run: |
          npm i -g yarn

      - run: yarn install --no-frozen-lockfile

      - name: Build
        run: yarn ${{ inputs.PACKAGE_BUILD_SCRIPT }}

      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2.1.1
        with:
          file-name: ${{ inputs.PACKAGE_PATH }}

      - name: Update Docker Tag
        id: docker-tag
        run: |
          echo "::set-output name=time::$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')"
          if [ ${{ steps.check.outputs.changed }} == 'true' ]; then
            echo "::set-output name=version::v${{ steps.check.outputs.version }}"
            echo "::set-output name=changed::true"
          else
            echo "::set-output name=version::${{ inputs.DEFAULT_VERSION }}"
            echo "::set-output name=changed::false"
          fi

      - name: Build and push Docker image
        id: docker_build_push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ inputs.DOCKERFILE_PATH }}
          push: true
          tags: beclab/${{ inputs.PACKAGE_NAME }}:${{ steps.docker-tag.outputs.version }}

      - name: Post Success Message
        if: steps.docker_build_push.outcome == 'success'
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.FEISHU_WEBHOOK_URL }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: 'Success: beclab/${{ inputs.PACKAGE_NAME }}:${{ steps.docker-tag.outputs.version }}'
                content:
                - - tag: text
                    un_escape: true
                    text: 'images:&nbsp;'
                  - tag: a
                    text: beclab/${{ inputs.PACKAGE_NAME }}
                    href: https://hub.docker.com/r/beclab/${{ inputs.PACKAGE_NAME }}
                - - tag: text
                    un_escape: true
                    text: 'repository:&nbsp;'
                  - tag: a
                    text: ${{ github.event.repository.name }}
                    href: ${{ github.event.repository.html_url }}
                - - tag: text
                    un_escape: true
                    text: 'date:&nbsp;'
                  - tag: text
                    text: '${{ steps.docker-tag.outputs.time }}'

      - name: Post Failure Message
        if: steps.docker_build_push.outcome != 'success'
        uses: foxundermoon/feishu-action@v2
        with:
          url: ${{ secrets.FEISHU_WEBHOOK_URL }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: 'Failure: ${{ inputs.PACKAGE_NAME }}:${{ steps.docker-tag.outputs.version }}'
                content:
                - - tag: text
                    un_escape: true
                    text: 'logs:&nbsp;'
                  - tag: a
                    text: ${{ github.job }}
                    href: ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}
